name: E2E Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
      with:
        disable-sudo: true
        egress-policy: block
        allowed-endpoints: >
          api.github.com:443
          github.com:443
          objects.githubusercontent.com:443
          proxy.golang.org:443
          storage.googleapis.com:443
          sum.golang.org:443
          aquasecurity.github.io:443
          packages.microsoft.com:443
          azure.archive.ubuntu.com:80
          motd.ubuntu.com:443
          esm.ubuntu.com:443
          ghcr.io:443
          pkg-containers.githubusercontent.com:443
          api.codecov.io:443
          storage.googleapis.com:443
          cli.codecov.io:443
          sts.googleapis.com:443
          sqladmin.googleapis.com:443
          34.42.78.208:3307

    - name: Checkout code
      uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1

    - name: Set up Go
      uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
      with:
        go-version-file: 'go.mod'

    - name: Install Trivy
      run: |
        sudo apt-get install wget apt-transport-https gnupg -y
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
        echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb generic main" | sudo tee /etc/apt/sources.list.d/trivy.list
        sudo apt-get update
        sudo apt-get install trivy -y

    - name: E2E Tests
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        GHCR_CREDS: ${{ secrets.GHCR_CREDS }}
      run: make test

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238 # v4.6.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: coverage.out
        verbose: true
